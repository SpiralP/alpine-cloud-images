# vim: ts=2 et:

# NOTE: If you are using alpine-cloud-images to build public cloud images
# for something/someone other than Alpine Linux, you *MUST* override
# *AT LEAST* the 'project' setting with a unique identifier string value
# via a "config overlay" to avoid image import and publishing collisions.

project = https://alpinelinux.org/cloud

# all build configs start with these
Default {
  project = ${project}

  # image name/description components
  name        = [ alpine ]
  description = [ Alpine Linux ]

  motd {
    welcome = "Welcome to Alpine!"
    wiki    = \
      "The Alpine Wiki contains a large amount of how-to guides and general\n"\
      "information about administrating Alpine systems.\n"\
      "See <https://wiki.alpinelinux.org/>."
    version_notes = "Release Notes:\n"\
      "* <https://alpinelinux.org/posts/alpine-{version}.0/released.html>"
    release_notes = "* <https://alpinelinux.org/posts/{release}/released.html"
  }

  # initial provisioning script and data directory
  scripts     = [ setup ]
  script_dirs = [ setup.d ]

  size  = 1G
  login = alpine

  local_format  = qcow2
}

# profile build matrix
Dimensions {
  version {
    "3.15"  { include required("version/3.15.conf") }
    "3.14"  { include required("version/3.14.conf") }
    "3.13"  { include required("version/3.13.conf") }
    "3.12"  { include required("version/3.12.conf") }
    "3.11"  { include required("version/3.11.conf") }
    edge    { include required("version/edge.conf") }
  }
  arch {
    x86_64  { include required("arch/x86_64.conf") }
    aarch64 { include required("arch/aarch64.conf") }
  }
  firmware {
    bios { include required("firmware/bios.conf") }
    uefi { include required("firmware/uefi.conf") }
  }
  bootstrap {
    tiny      { include required("bootstrap/tiny.conf") }
  }
  cloud {
    aws   { include required("cloud/aws.conf") }
  }
}

# all build configs merge these at the very end
Mandatory {
  name        = [ "r{revision}" ]
  description = [ - https://alpinelinux.org/cloud ]

  motd {
    motd_change = "You may change this message by editing /etc/motd."
  }

  # final provisioning script
  scripts = [ cleanup ]
}
